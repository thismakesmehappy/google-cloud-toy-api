# Google Cloud Build configuration for automated CI/CD
# Environment-aware deployment configuration
# Triggered on: 
#   - develop branch push → dev environment
#   - main branch push → staging environment  
#   - production deployments are manual only

steps:
  # Step 1: Install dependencies
  - name: 'gcr.io/cloud-builders/npm'
    args: ['ci']
    dir: 'google-cloud-toy-api'
    id: 'install-deps'

  # Step 2: Run unit tests
  - name: 'gcr.io/cloud-builders/npm'
    args: ['run', 'test:ci']
    dir: 'google-cloud-toy-api'
    id: 'run-tests'
    waitFor: ['install-deps']

  # Step 3: Run TypeScript compilation
  - name: 'gcr.io/cloud-builders/npm'
    args: ['run', 'build']
    dir: 'google-cloud-toy-api'
    id: 'build-typescript'
    waitFor: ['run-tests']

  # Step 4: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/toy-api:$SHORT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/toy-api:latest',
      './google-cloud-toy-api'
    ]
    id: 'build-image'
    waitFor: ['build-typescript']

  # Step 5: Push Docker image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/toy-api:$SHORT_SHA']
    id: 'push-image'
    waitFor: ['build-image']

  # Step 6: Deploy to Cloud Run (environment-specific)
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'run', 'deploy', 'toy-api-service-${_ENVIRONMENT}',
      '--image', 'gcr.io/$PROJECT_ID/toy-api:$SHORT_SHA',
      '--region', 'us-central1',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--set-env-vars', 'NODE_ENV=${_ENVIRONMENT},API_KEY=${_API_KEY}',
      '--memory', '${_MEMORY}',
      '--cpu', '${_CPU}',
      '--min-instances', '${_MIN_INSTANCES}',
      '--max-instances', '${_MAX_INSTANCES}',
      '--timeout', '300s'
    ]
    id: 'deploy-service'
    waitFor: ['push-image']

  # Step 7: Wait for service to stabilize
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args: [
      '-c',
      'sleep 30'
    ]
    id: 'wait-stabilize'
    waitFor: ['deploy-service']

  # Step 8: Run integration tests against deployed service
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args: [
      '-c',
      |
        # Get the service URL
        SERVICE_URL=$(gcloud run services describe toy-api-service-${_ENVIRONMENT} --region=us-central1 --format='value(status.url)')
        echo "Testing service at: $SERVICE_URL (${_ENVIRONMENT} environment)"
        
        # Run basic health check
        curl -f "$SERVICE_URL/" || exit 1
        curl -f "$SERVICE_URL/public" || exit 1
        
        # Run authenticated endpoint test
        curl -f -H "x-api-key: ${_API_KEY}" "$SERVICE_URL/items" || exit 1
        
        echo "✅ Integration tests passed!"
    ]
    id: 'integration-tests'
    waitFor: ['wait-stabilize']

# Rollback on failure
onFailure:
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args: [
      '-c',
      |
        echo "❌ Build failed - attempting rollback"
        
        # Get previous revision
        PREVIOUS_REVISION=$(gcloud run revisions list \
          --service=toy-api-service-${_ENVIRONMENT} \
          --region=us-central1 \
          --format='value(metadata.name)' \
          --sort-by='~metadata.creationTimestamp' \
          --limit=2 | tail -n 1)
        
        if [ ! -z "$PREVIOUS_REVISION" ]; then
          echo "Rolling back to revision: $PREVIOUS_REVISION"
          gcloud run services update-traffic toy-api-service-${_ENVIRONMENT} \
            --to-revisions=$PREVIOUS_REVISION=100 \
            --region=us-central1
          echo "✅ Rollback completed"
        else
          echo "⚠️  No previous revision found for rollback"
        fi

# Build options
options:
  machineType: 'E2_STANDARD_2'
  substitutionOption: 'ALLOW_LOOSE'
  logging: 'CLOUD_LOGGING_ONLY'

# Timeout for entire build
timeout: '1200s'  # 20 minutes

# Substitution variables (set in Cloud Build trigger)
substitutions:
  _ENVIRONMENT: 'dev'  # Override in trigger settings
  _API_KEY: 'dev-api-key-123'  # Override in trigger settings
  _MEMORY: '512Mi'  # Override in trigger settings
  _CPU: '1'  # Override in trigger settings
  _MIN_INSTANCES: '0'  # Override in trigger settings
  _MAX_INSTANCES: '10'  # Override in trigger settings

# Images to store in Container Registry
images:
  - 'gcr.io/$PROJECT_ID/toy-api:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/toy-api:latest'